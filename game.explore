#공격력은 변수 지정,player_info[2]=공격력을 반복(무기가 바뀔때마다)
#플레이어 정보는 이름,hp,공격력,체크포인트 위치
#더보기에서는 인벤토리(자원,아이템,???),플레이어 정보,지도,퀘스트 정보
#이스터에그가 많이 있음
import pygame as py
import sys,time
from random import choice
from pygame.locals import *
import pickle
import datetime as d
import player_EX
#데이터 세이브 필요

#초기
py.init()

WIDTH=960
HEIGHT=560

BLACK=(0,0,0)
WHITE=(255,255,255)
GREY=(127,127,127)

SCREEN=py.display.set_mode([WIDTH,HEIGHT])
py.display.set_caption('EX,the island of traveling')
    
CLOCK=py.time.Clock()
    
CLOCK.tick(60)

hotel_passed=0

공격력=100
방어력=10
체력=100

scene_1=py.image.load(r'\directory\illustrate\scene_1.png')
menu=py.image.load(r'C:\directory\illustrate\store_menu.png')
store=py.image.load(r'C:\directory\illustrate\store_menu.png')
hp_potion=py.image.load(r'C:\directory\illustrate\hp_potent_energyberry_potion.png')
route=py.image.load(r'C:\directory\illustrate\route.png')

difficulty=''

nanum=py.font.SysFont('nanummyeongjo',30)

'''save={}
save['local']=difficulty
save['time']=d.datetime.now().strftime('%Y-%m-%d-%H-%M-%S')
save['hotel']=hotel_passed'''
'''class inventory:
    def __init__(self):
        self.item=[]
        self.money=5000
        
    def pay(self,):
        
    def bag_arrange(self):
        
    def change(self,item,function):'''
        
        
        
#----------------------무기/방어구/hp도구----------------------------------------------------
class w_shortknife:
    def __init__(self):
        self.damage=112
        self.name='쿠크리 검'
        #self.image=py.image.load(r'')
        self.price=7800
    def info(self):
        information=[self.damage,self.name,'''self.image''']
        return information
    
class w_revolver:
    def __init__(self):
        self.damage=222
        self.name='리볼버'
        #self.image=py.image.load(r'')
        self.price=22200
    def info(self):
        information=[self.damage,self.name,'''self.image''']
        return information
    
class w_spear:
    def __init__(self):
        self.damage=61
        self.name='창'
        #self.image=py.image.load(r'')
        self.price=3500
    def info(self):
        information=[self.damage,self.name,'''self.image''']
        return information
    
class w_bow:
    def __init__(self):
        self.damage=103
        self.name='장궁'
        #self.image=py.image.load(r'')
        self.price=7000
    def info(self):
        information=[self.damage,self.name,'''self.image''']
        return information
    
class w_sharpenbamboo:
    def __init__(self):
        self.damage=36
        self.name='원콤죽창'
        self.price=2300
        #self.image=py.image.load(r'')
    def info(self):
        information=[self.damage,self.name,'''self.image''']
        return information
    
class w_warriorsword:
    def __init__(self):
        self.damage=178
        self.name='전사의 대검'
        #self.image=py.image.load(r'')
        self.price=17600
    def info(self):
        information=[self.damage,self.name,'''self.image''']
        return information
    
class d_leather_set:
    def __init(self):
        self.block=90
        self.name='가죽 옷'
        #self.image=py.image.load(r'')
    def info(self):
        information=[self.damage,self.name,'''self.image''']
        return information
    
class d_breastarmor:
    def __init(self):
        self.block=164
        self.name='강철 갑옷'
        #self.image=py.image.load(r'')
    def info(self):
        information=[self.damage,self.name,'''self.image''']
        return information
class player:
    def __init__(self):
        self.attack=10#주먹으로 싸움(기본공격량)
        self.defend=1#옷이 막아줌(기본방어량)
        self.hp=50#사람 특성상 다른 동물보다 자연에 적합하지 않음(기본 체력)
        self.defence=''
        self.weapon=''
        self.money=500

    def weapon_change(self,wpn,deal):
        #사용 할 무기는 사용 칸으로 옮김
        #아닌 무기는 맨 마지막 칸으로 옮김
        #무기를 바꿀 때,self.weapon를 바꿔야 한다.
        #공통적으로,1,2,3,4,5,6칸이 있는데,각 칸마다.어느 숫자를 누르면
        self.weapon=wpn#무기가 바뀜
        self.attack=deal#무기의 공격력이 self.attack로 바뀜
        bag=inventory()#가방에서 화면 구성
        bag.change(self.weapon,self.attack)
        

    def defend_change(self,dfn,protect):
        #사용 할 방어구는 사용 칸으로 옮김
        #아닌 방어구는 맨 마지막 칸으로 옮김
        #방어구를 바꿀 때,self.defence를 바꿔야 한다.
        self.defence=dfn#방어구 바뀜
        self.defend=protect#방어구의 방어 정도가 바뀜
        bag=inventory()#가방에서 화면 구성
        bag.change(self.defence,self.defend)

    def player_attack(self):
        return self.attack#attack=player(),a=attack.player_attack(),foe_defend(a)
    
    def player_defend(self,atk):
        self.hp-=atk
        return self.hp
    def money(self,used):
        self.money-=used
        return self.money
        
#-----------------그림 그리기---------------------------------------------------
def image_load(SCREEN,img,loc):
    SCREEN.blit(img,loc)
    py.display.flip()
def image_fix(SCREEN,img,loc,scale):
    rescale=py.transform.scale(img,scale)
    SCREEN.blit(rescale,loc)
    py.display.flip()

#-----------------------------------------프린트-------------------------------------
def SCREEN_print_b(SCREEN,text,loc,size,squ_size):
    nanum=py.font.SysFont('nanummyeongjo',size) 
    sen=nanum.render(text,True,WHITE)
    location=sen.get_rect()
    location.center = (loc)
    notice_image=py.draw.rect(SCREEN,BLACK,py.Rect(squ_size[0],squ_size[1],squ_size[2],squ_size[3]))
    SCREEN.blit(sen,location)
    py.display.flip()

def SCREEN_print_c(SCREEN,text,loc,size,color):
    SCREEN.fill(color)
    nanum=py.font.SysFont('nanummyeongjo',size) 
    sen=nanum.render(text,True,WHITE)
    location=sen.get_rect()
    location.center = (loc)
    SCREEN.blit(sen,location)
    py.display.flip()

def SCREEN_print(SCREEN,text,loc,size):
    nanum=py.font.SysFont('nanummyeongjo',size) 
    sen=nanum.render(text,True,WHITE)
    location=sen.get_rect()
    location.center = (loc)
    SCREEN.blit(sen,location)
    py.display.flip()
#--------------------------------------------------------------------------------------
#--------------------------------상점--------------------------------------------------
def store_visit():
    image_load(screen,original,(0,0),(960,560))
    image_load(screen,hp_potion,(39,169),(189,222))#39,267,496,729
    image_load(screen,hp_potion,(267,169),(189,222))
    image_load(screen,hp_potion,(496,169),(189,222))
    image_load(screen,hp_potion,(729,169),(189,222))
    SCREEN_print_b(SCREEN,"어서오세요! 무엇을 사실 건가요?",(240,HEIGHT/2+165),20,(0,415,WIDTH,225))
#---------------------------------지역 난이도 로드-------------------------------------
class difficulty:

    def __init__(self):
        self.difficulty=''

    def localeasy(self):
        self.difficulty='easy'
        return self.difficulty
        
    def localmedium(self):
        self.difficulty='medium'
        return self.difficulty
       
    def localhard(self):
        self.difficulty='difficult'
        return self.difficulty
#--------------------------------------------------------------------------------------
def hotel_appeared():
    global WIDTH,HEIGHT
    screen.print_b(SCREEN,'쉬고 갈까?'(WIDTH/2,HEIGHT/2+235),20,(0,415,WIDTH,225))
    SCREEN.fill(BLACK)
    SCREEN_print_b(SCREEN,'여관이 있다.쉬고 갈까?',(WIDTH/2,HEIGHT/2+235),20,(0,415,WIDTH,225))
    res=ask((WIDTH/2+70,HEIGHT/2+235),(WIDTH/2+70,HEIGHT/2+235))
    SCREEN_fill(BLACK)
    for event in py.event.get():
        recent_hp=hp
        if event.type==py.K_y:
            hp+=full_hp
            money-=500
            time.sleep(3)
            alarm='개운하다!{}만큼 회복했다.'.format(full_hp-recent_hp)
            SCREEN.print_b(SCREEN,alarm,(WIDTH/2,HEIGHT/2+235),(WIDTH/2,HEIGHT/2+165),20,(0,415,WIDTH,225))
        if event.type==py.K_n():
            SCREEN.print_b(SCREEN,'갈 길이 멀다.그냥 가자',(WIDTH/2,HEIGHT/2+235),15,WHITE)
            SCREEN.fill(BLACK)
            time.sleep(1)
def wait():
    key=py.key.get_pressed()
    while True:
        for event in py.event.get():
            if event.type==py.KEYDOWN:
                if event.key==py.K_SPACE:
                    return
            if event.type==py.QUIT:
                py.quit()
                sys.exit()

def ask(loc,loc1):
    SCREEN_print(SCREEN,"네(y)",loc,30)
    SCREEN_print(SCREEN,"아니요(n)",loc1,30)
    while True:
        for event in py.event.get():
            if event.type==py.KEYDOWN:
                if event.key==py.K_y:
                    return 'y'
                elif event.key==py.K_n:
                    return 'n'
def route_inf():
    image_load(route)
    #while True:
    
        
def easy_region():
    image_fix(SCREEN,route,(0,0),(960,560))
    SCREEN_print_b(SCREEN,"자, 이곳을 한 번 탐사해보자. 무언사 가치있는게 나올지도 몰라",(240,HEIGHT/2+165),20,(0,415,WIDTH,225))
    
def info():
    SCREEN_print_c(SCREEN,"로딩 중......",(WIDTH/2,HEIGHT/2),30,BLACK)
    SCREEN_print(SCREEN,' <스페이스 키>를 눌러 진행하십시요',(WIDTH/2,HEIGHT/2+75),20)
    time.sleep(3)
    SCREEN_print_c(SCREEN,"탐험가여,만나서 반가워요",(WIDTH/2,HEIGHT/2),30,GREY)
    wait()
    SCREEN_print_c(SCREEN,"전 가이드,소피아라고 합니다.",(WIDTH/2,HEIGHT/2),30,GREY)
    wait()
    SCREEN_print_c(SCREEN,"당신을 돕기 위해 왔죠.",(WIDTH/2,HEIGHT/2),30,GREY)
    wait()
    SCREEN_print_c(SCREEN,"시작에 앞서,가이드를 보시겠습니까?",(WIDTH/2,HEIGHT/2),30,GREY)
    res=ask((WIDTH/2-84,HEIGHT/2+50),(WIDTH/2+84,HEIGHT/2+50))
    if res=='y':
        while True:
            SCREEN_print_c(SCREEN,"알겠습니다",(WIDTH/2,HEIGHT/2),30,GREY)
            SCREEN.fill(BLACK)
            time.sleep(2)
            #안내 가이드
            SCREEN_print_c(SCREEN,"사진 a.",(WIDTH/2,HEIGHT/2),30,GREY)
            SCREEN_print_b(SCREEN,"탐험가님,당신이 탐험하게 될 곳은 익스,탐험의 대지입니다.",(WIDTH/2,HEIGHT/2+220),30,(0,450,WIDTH,225))
            wait()
            SCREEN_print_c(SCREEN,"사진 a",(WIDTH/2,HEIGHT/2),30,GREY)
            SCREEN_print_b(SCREEN,"이곳은 그 어느 곳보다 자연이 잘 보존되어있죠.",(WIDTH/2,HEIGHT/2+205),30,(0,450,WIDTH,225))
            SCREEN_print(SCREEN,"이곳만큼이나 주민들도 친절합니다.",(WIDTH/2,HEIGHT/2+240),30)
            wait()
            SCREEN_print_c(SCREEN,"사진 b",(WIDTH/2,HEIGHT/2),30,GREY)
            SCREEN_print_b(SCREEN,"탐험하기에 앞서,탐험에 도움이 될 것들을 알아 놓으셔야 합니다.",(WIDTH/2,HEIGHT/2+220),30,(0,450,WIDTH,225))
            wait()
            SCREEN_print_c(SCREEN,"사진 a.",(WIDTH/2,HEIGHT/2),30,GREY)
            SCREEN_print_b(SCREEN,"앞으로 전진할 때는 화살표 위쪽키를 누르십시요.",(WIDTH/2,HEIGHT/2+205),30,(0,450,WIDTH,225))
            SCREEN_print(SCREEN,"유저가 적을 발견하거나,보물을 발견합니다",(WIDTH/2,HEIGHT/2+240),30)
            wait()
            SCREEN_print_c(SCREEN,"사진 c.",(WIDTH/2,HEIGHT/2),30,GREY)
            SCREEN_print_b(SCREEN,"플레이어의 스텟은 ",(WIDTH/2,HEIGHT/2+205),30,(0,450,WIDTH,225))
            SCREEN_print(SCREEN,"[공격력,방어력,체력]등이 있습니다",(WIDTH/2,HEIGHT/2+240),30)
            wait()
            SCREEN_print_c(SCREEN,"사진 d.",(WIDTH/2,HEIGHT/2),30,GREY)
            SCREEN_print_b(SCREEN,"공격력은 공격의 피해량을 나타내며,",(WIDTH/2,HEIGHT/2+205),30,(0,450,WIDTH,225))
            SCREEN_print(SCREEN,"무기 교체로 더 증가시킬 수 있습니다.",(WIDTH/2,HEIGHT/2+240),30)#레벨업이나 
            wait()
            SCREEN_print_c(SCREEN,"사진 e.",(WIDTH/2,HEIGHT/2),30,GREY)
            SCREEN_print_b(SCREEN,"방어력은 적의 데미지를 반감시키며,",(WIDTH/2,HEIGHT/2+205),30,(0,450,WIDTH,225))
            SCREEN_print(SCREEN,"방어구 교체로 더 증가시킬 수 있습니다",(WIDTH/2,HEIGHT/2+240),30)
            wait()
            SCREEN_print_c(SCREEN,"사진 f.",(WIDTH/2,HEIGHT/2),30,GREY)
            SCREEN_print_b(SCREEN,"마지막,체력은 가장 중요한 요소로,0이 될 시에 들렀던",(WIDTH/2,HEIGHT/2+205),30,(0,450,WIDTH,225))
            SCREEN_print(SCREEN,"여관이나 시작 지역으로 이동합니다.",(WIDTH/2,HEIGHT/2+240),30)
            wait()
            SCREEN_print_c(SCREEN,"사진 g.",(WIDTH/2,HEIGHT/2),30,GREY)
            SCREEN_print_b(SCREEN,"식용 아이템으로 체력을 회복하거나,",(WIDTH/2,HEIGHT/2+205),30,(0,450,WIDTH,225))
            SCREEN_print(SCREEN,"침대로 체력을 회복할 수 있습니다",(WIDTH/2,HEIGHT/2+240),30)
            wait()
            SCREEN_print_c(SCREEN,"사진 h.",(WIDTH/2,HEIGHT/2),30,GREY)
            SCREEN_print_b(SCREEN,"탐험을 하면서 알 수 없는 것들을 발견할 때가 많습니다.",(WIDTH/2,HEIGHT/2+205),30,(0,450,WIDTH,225))
            SCREEN_print(SCREEN,"g키를 눌러 주우십시요.도움이 될 겁니다",(WIDTH/2,HEIGHT/2+240),30)
            wait()
            SCREEN_print_c(SCREEN,"사진 i.",(WIDTH/2,HEIGHT/2),30,GREY)
            SCREEN_print_b(SCREEN,"적이 나타나면,도망가거나 싸우십시요.",(WIDTH/2,HEIGHT/2+205),30,(0,450,WIDTH,225))
            SCREEN_print(SCREEN,"적들은 가끔씩 좋은 아이템을 줄때도 있답니다",(WIDTH/2,HEIGHT/2+240),30)
            wait()
            SCREEN_print_c(SCREEN,"사진 j.",(WIDTH/2,HEIGHT/2),30,GREY)
            SCREEN_print_b(SCREEN,"익스는 3개 지역이 있고,지역에 따라 난이도가 다릅니다.",(WIDTH/2,HEIGHT/2+205),30,(0,450,WIDTH,225))
            SCREEN_print(SCREEN,"난이도가 어려울수록 더 좋은 아이템을 볼 수 있죠.",(WIDTH/2,HEIGHT/2+240),30)
            wait()
            SCREEN_print_c(SCREEN,"사진 k.",(WIDTH/2,HEIGHT/2),30,GREY)
            SCREEN_print_b(SCREEN,"마을엔 여관과 상점이 있으며,치료하거나 물건을 살 수 있습니다",(WIDTH/2,HEIGHT/2+220),30,(0,450,WIDTH,225))
            wait()
            SCREEN_print_c(SCREEN,"사진 h.",(WIDTH/2,HEIGHT/2),30,GREY)
            SCREEN_print_b(SCREEN,"유물을 찾으러 모험을 떠나세요.",(WIDTH/2,HEIGHT/2+205),30,(0,450,WIDTH,225))
            SCREEN_print(SCREEN,"유물은 탐험하면서 어느 위치에서 얻을 수 있습니다.",(WIDTH/2,HEIGHT/2+240),30)
            wait()
            SCREEN_print_c(SCREEN,"내용을 이해하셨나요?",(WIDTH/2,HEIGHT/2),30,BLACK)
            res_in=ask((WIDTH/2+90,HEIGHT/2+65),(WIDTH/2-90,HEIGHT/2+65))
            if res_in=='y':
                res='n'
                break
                
            elif res_in=='n':
                continue
        if res=='n':
            SCREEN_print_c(SCREEN,'알겠습니다',(WIDTH/2,HEIGHT/2),30,GREY)
            wait()
            SCREEN_print_c(SCREEN,"이제,머나먼 미지의 세계로 항해를 하러 갈까요?",(WIDTH/2,HEIGHT/2),30,GREY)
            wait()
            py.display.update()
            game_beginning()

def game_beginning():
    SCREEN.fill(BLACK)
    time.sleep(3)
    move_x=0
    while move_x!=-500:
        image_load(SCREEN,scene_1,(move_x,0))
        time.sleep(0.002)
        move_x-=1
    SCREEN_print_b(SCREEN,"탐험일지 152번,난 그 비밀의 섬을 발견했다.",(WIDTH/2,HEIGHT/2+165),20,(0,415,WIDTH,225))
    wait()
    SCREEN_print_b(SCREEN,"아마 이 섬에 남은 권력자들의 유물이 있을 것이다.",(WIDTH/2,HEIGHT/2+165),20,(0,415,WIDTH,225))
    wait()
    SCREEN_print_b(SCREEN,"이곳에서 무슨 일이 있을지는 모르지만,",(WIDTH/2,HEIGHT/2+165),20,(0,415,WIDTH,225))
    SCREEN_print(SCREEN,"주변에 도움이 될 만한 것들이 많다하니 너무 걱정은 하지 말자고.",(WIDTH/2,HEIGHT/2+190),20)
    wait()
    easy_region()
                
SCREEN.fill(BLACK)
py.display.flip()

#def game_start(screen):'''

running=True
while running:
    info()
    

    
           
#player_info={"이름":player_name,"hp":100,"공격력":10}

#if __name__==__main__:
    
    
py.quit()
sys.exit()
